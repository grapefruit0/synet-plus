strict digraph "" {
	node [label="\N"];
	Customer	[VERTEX_TYPE="VERTEXTYPE.PEER",
		bgp_asnum=600,
		label="Customer\nPEER
AS Num: 600"];
	R1	[VERTEX_TYPE="VERTEXTYPE.ROUTER",
		bgp_asnum=100,
		label="R1\nROUTER
AS Num: 100"];
	Customer -> R1	[EDGE_TYPE="EDGETYPE.PEER",
		label=PEER];
	R1 -> Customer	[EDGE_TYPE="EDGETYPE.PEER",
		label=PEER];
	R2	[VERTEX_TYPE="VERTEXTYPE.ROUTER",
		bgp_asnum=100,
		label="R2\nROUTER
AS Num: 100"];
	R1 -> R2	[EDGE_TYPE="EDGETYPE.ROUTER",
		label=ROUTER];
	R3	[VERTEX_TYPE="VERTEXTYPE.ROUTER",
		bgp_asnum=100,
		label="R3\nROUTER
AS Num: 100"];
	R1 -> R3	[EDGE_TYPE="EDGETYPE.ROUTER",
		label=ROUTER];
	R2 -> R1	[EDGE_TYPE="EDGETYPE.ROUTER",
		label=ROUTER];
	R2 -> R3	[EDGE_TYPE="EDGETYPE.ROUTER",
		label=ROUTER];
	Provider1	[VERTEX_TYPE="VERTEXTYPE.PEER",
		bgp_asnum=400,
		label="Provider1\nPEER
AS Num: 400"];
	R2 -> Provider1	[EDGE_TYPE="EDGETYPE.PEER",
		label=PEER];
	R3 -> R1	[EDGE_TYPE="EDGETYPE.ROUTER",
		label=ROUTER];
	R3 -> R2	[EDGE_TYPE="EDGETYPE.ROUTER",
		label=ROUTER];
	Provider2	[VERTEX_TYPE="VERTEXTYPE.PEER",
		bgp_asnum=500,
		label="Provider2\nPEER
AS Num: 500"];
	R3 -> Provider2	[EDGE_TYPE="EDGETYPE.PEER",
		label=PEER];
	Provider2 -> R3	[EDGE_TYPE="EDGETYPE.PEER",
		label=PEER];
	Provider1 -> R2	[EDGE_TYPE="EDGETYPE.PEER",
		label=PEER];
}
